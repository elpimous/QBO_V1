<launch>

  <!--      for neo robot 02-06-2019   -->

  <!-- BRINGUP -->
  <include file="$(find QBO_Neo_bringup)/launch/minimal.launch"/>

  <!-- D435 CAMERA + HSV conversion + DEPTH_IMAGE -->
  <include file="$(find realsense2_camera)/launch/rs_neo.launch"/>
  <arg name="align_depth"      default="true"/>
  <include file="$(find qbo_camera)/launch/depthimage_to_laserscan.launch"/>

  <arg name="rgbd_odometry"     default="false"/>
  <arg name="rtabmapviz"        default="false"/>
  <arg name="localization"      default="false"/>
  <arg name="simulation"        default="false"/>
  <arg name="sw_registered"     default="false"/>
  <arg     if="$(arg localization)" name="args"  default=""/>   <arg unless="$(arg localization)" name="args"  default=""/>
  <arg name="camera_info_topic" default="/camera/color/camera_info"/>
  <arg name="database_path"     default="/home/nvidia/catkin_ws/src/QBO_Neo_navigation/3D_map/rtabmap.db"/>
  <arg name="wait_for_transform"  default="1.0"/> 

  <!-- MOVE BASE -->
  <include file="$(find QBO_Neo_navigation)/launch/includes/move_base.launch.xml"/>

 <!-- Mapping -->
  <group ns="rtabmap">

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg args)">
	  <param name="database_path"       type="string" value="$(arg database_path)"/>
	  <param name="frame_id"            type="string" value="/base_footprint"/>
	  <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
	  <param name="subscribe_depth"     type="bool"   value="true"/>
	  <param name="subscribe_scan"      type="bool"   value="true"/>
	  <param name="map_negative_poses_ignored" type="bool" value="true"/>
	  <param name="map_negative_scan_empty_ray_tracing" type="bool" value="true"/> <!-- grid updated wenever robot is moving or not -->

      <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
	  <param name="use_action_for_goal" type="bool" value="true"/>
          <remap from="move_base"            to="/move_base"/>
	
	  <!-- inputs -->
	  <remap from="scan"            to="/scan"/>
	  <remap from="rgb/image"       to="/camera/color/image_raw"/>
  	  <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
  	  <remap from="rgb/camera_info" to="/camera/color/camera_info"/>

          <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
          <param unless="$(arg rgbd_odometry)" name="odom_frame_id" value="/odom"/>
          <param unless="$(arg rgbd_odometry)" name="odom_tf_linear_variance" value="0.001"/>
          <param unless="$(arg rgbd_odometry)" name="odom_tf_angular_variance" value="0.001"/>
  	  
  	  <!-- output -->
  	  <remap from="grid_map" to="/map"/>
	
	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
          <!-- 0=Frame-to-Map (F2M) 1=Frame-to-Frame (F2F) -->
          <param name="Odom/Strategy" value="1"/>
          <!-- Correspondences: 0=Features Matching, 1=Optical Flow -->
          <param name="Vis/CorType" value="1"/>
          <!-- maximum features map size, default 2000 -->
          <param name="OdomF2M/MaxSize" type="string" value="1500"/> 
          <!-- maximum features extracted by image, default 1000 -->
          <param name="Vis/MaxFeatures" type="string" value="750"/>

	  <param name="RGBD/ProximityBySpace"        type="string" value="true"/>   <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
	  <param name="Kp/MaxDepth"                  type="string" value="4.0"/>
	  <param name="Reg/Strategy"                 type="string" value="0"/>      <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
	  <param name="Icp/CorrespondenceRatio"      type="string" value="0.3"/>
	  <param name="Vis/MinInliers"               type="string" value="12"/>     <!-- default=15  3D visual words minimum inliers to accept loop closure -->
	  <param name="Vis/InlierDistance"           type="string" value="0.10"/>    <!-- 3D visual words correspondence distance -->
	  <param name="Vis/EstimationType"           type="string" value="1"/>
	  <param name="RGBD/AngularUpdate"           type="string" value="0.10"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/LinearUpdate"            type="string" value="0.10"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/> 
	  <param name="Rtabmap/TimeThr"              type="string" value="0"/>
	  <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/>
	  <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="Optimizer/Slam2D"             type="string" value="true" />
	  <param name="GridGlobal/MinSize"           type="string" value="12"/>
	  <param name="approx_sync"                  type="string" value="false"/>
	  <param name="cloud_noise_filtering_radius" type="string" value="0.05"/>
	  <param name="cloud_noise_filtering_min_neighbors" type="string" value="2"/>
	  <param name="proj_max_ground_angle"        type="string" value="45"/>
	  <param name="proj_max_ground_height"        type="string" value="0.1"/>
	  <param name="proj_max_height"              type="string" value="2.0"/>
	  <param name="proj_min_cluster_size"        type="string" value="20"/>

	  
	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
    </node>

    
  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find QBO_Neo_navigation)/launch/includes/D435_amcl.launch.xml"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  </group>
</launch>
