/* Auto-generated by genmsg_cpp for file /opt/ros/hydro/stacks/qbo_arduqbo/srv/TorqueEnable.srv */
#ifndef QBO_ARDUQBO_SERVICE_TORQUEENABLE_H
#define QBO_ARDUQBO_SERVICE_TORQUEENABLE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_arduqbo
{
template <class ContainerAllocator>
struct TorqueEnableRequest_ {
  typedef TorqueEnableRequest_<ContainerAllocator> Type;

  TorqueEnableRequest_()
  : torque_enable(false)
  {
  }

  TorqueEnableRequest_(const ContainerAllocator& _alloc)
  : torque_enable(false)
  {
  }

  typedef uint8_t _torque_enable_type;
  uint8_t torque_enable;


  typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct TorqueEnableRequest
typedef  ::qbo_arduqbo::TorqueEnableRequest_<std::allocator<void> > TorqueEnableRequest;

typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableRequest> TorqueEnableRequestPtr;
typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableRequest const> TorqueEnableRequestConstPtr;



template <class ContainerAllocator>
struct TorqueEnableResponse_ {
  typedef TorqueEnableResponse_<ContainerAllocator> Type;

  TorqueEnableResponse_()
  {
  }

  TorqueEnableResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct TorqueEnableResponse
typedef  ::qbo_arduqbo::TorqueEnableResponse_<std::allocator<void> > TorqueEnableResponse;

typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableResponse> TorqueEnableResponsePtr;
typedef boost::shared_ptr< ::qbo_arduqbo::TorqueEnableResponse const> TorqueEnableResponseConstPtr;


struct TorqueEnable
{

typedef TorqueEnableRequest Request;
typedef TorqueEnableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct TorqueEnable
} // namespace qbo_arduqbo

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e44dc96db32bd58b5a896c2c5bf316d0";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe44dc96db32bd58bULL;
  static const uint64_t static_value2 = 0x5a896c2c5bf316d0ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_arduqbo/TorqueEnableRequest";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool torque_enable\n\
\n\
";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_arduqbo/TorqueEnableResponse";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.torque_enable);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TorqueEnableRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TorqueEnableResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_arduqbo::TorqueEnable> {
  static const char* value() 
  {
    return "e44dc96db32bd58b5a896c2c5bf316d0";
  }

  static const char* value(const qbo_arduqbo::TorqueEnable&) { return value(); } 
};

template<>
struct DataType<qbo_arduqbo::TorqueEnable> {
  static const char* value() 
  {
    return "qbo_arduqbo/TorqueEnable";
  }

  static const char* value(const qbo_arduqbo::TorqueEnable&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e44dc96db32bd58b5a896c2c5bf316d0";
  }

  static const char* value(const qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_arduqbo/TorqueEnable";
  }

  static const char* value(const qbo_arduqbo::TorqueEnableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e44dc96db32bd58b5a896c2c5bf316d0";
  }

  static const char* value(const qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_arduqbo/TorqueEnable";
  }

  static const char* value(const qbo_arduqbo::TorqueEnableResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_ARDUQBO_SERVICE_TORQUEENABLE_H

