/* Auto-generated by genmsg_cpp for file /opt/ros/hydro/stacks/qbo_self_recognizer/srv/QboRecognize.srv */
#ifndef QBO_SELF_RECOGNIZER_SERVICE_QBORECOGNIZE_H
#define QBO_SELF_RECOGNIZER_SERVICE_QBORECOGNIZE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_self_recognizer
{
template <class ContainerAllocator>
struct QboRecognizeRequest_ {
  typedef QboRecognizeRequest_<ContainerAllocator> Type;

  QboRecognizeRequest_()
  {
  }

  QboRecognizeRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct QboRecognizeRequest
typedef  ::qbo_self_recognizer::QboRecognizeRequest_<std::allocator<void> > QboRecognizeRequest;

typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeRequest> QboRecognizeRequestPtr;
typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeRequest const> QboRecognizeRequestConstPtr;



template <class ContainerAllocator>
struct QboRecognizeResponse_ {
  typedef QboRecognizeResponse_<ContainerAllocator> Type;

  QboRecognizeResponse_()
  : recognized(false)
  {
  }

  QboRecognizeResponse_(const ContainerAllocator& _alloc)
  : recognized(false)
  {
  }

  typedef uint8_t _recognized_type;
  uint8_t recognized;


  typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct QboRecognizeResponse
typedef  ::qbo_self_recognizer::QboRecognizeResponse_<std::allocator<void> > QboRecognizeResponse;

typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeResponse> QboRecognizeResponsePtr;
typedef boost::shared_ptr< ::qbo_self_recognizer::QboRecognizeResponse const> QboRecognizeResponseConstPtr;


struct QboRecognize
{

typedef QboRecognizeRequest Request;
typedef QboRecognizeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct QboRecognize
} // namespace qbo_self_recognizer

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_self_recognizer/QboRecognizeRequest";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4a7936398cbe09a7d47b0d9fc1e9e7f3";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4a7936398cbe09a7ULL;
  static const uint64_t static_value2 = 0xd47b0d9fc1e9e7f3ULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_self_recognizer/QboRecognizeResponse";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool recognized\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct QboRecognizeRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.recognized);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct QboRecognizeResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_self_recognizer::QboRecognize> {
  static const char* value() 
  {
    return "4a7936398cbe09a7d47b0d9fc1e9e7f3";
  }

  static const char* value(const qbo_self_recognizer::QboRecognize&) { return value(); } 
};

template<>
struct DataType<qbo_self_recognizer::QboRecognize> {
  static const char* value() 
  {
    return "qbo_self_recognizer/QboRecognize";
  }

  static const char* value(const qbo_self_recognizer::QboRecognize&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4a7936398cbe09a7d47b0d9fc1e9e7f3";
  }

  static const char* value(const qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_self_recognizer/QboRecognize";
  }

  static const char* value(const qbo_self_recognizer::QboRecognizeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4a7936398cbe09a7d47b0d9fc1e9e7f3";
  }

  static const char* value(const qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_self_recognizer/QboRecognize";
  }

  static const char* value(const qbo_self_recognizer::QboRecognizeResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_SELF_RECOGNIZER_SERVICE_QBORECOGNIZE_H

