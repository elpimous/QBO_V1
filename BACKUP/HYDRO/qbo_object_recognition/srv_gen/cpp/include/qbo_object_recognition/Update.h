/* Auto-generated by genmsg_cpp for file /opt/ros/hydro/stacks/qbo_object_recognition/srv/Update.srv */
#ifndef QBO_OBJECT_RECOGNITION_SERVICE_UPDATE_H
#define QBO_OBJECT_RECOGNITION_SERVICE_UPDATE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_object_recognition
{
template <class ContainerAllocator>
struct UpdateRequest_ {
  typedef UpdateRequest_<ContainerAllocator> Type;

  UpdateRequest_()
  {
  }

  UpdateRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct UpdateRequest
typedef  ::qbo_object_recognition::UpdateRequest_<std::allocator<void> > UpdateRequest;

typedef boost::shared_ptr< ::qbo_object_recognition::UpdateRequest> UpdateRequestPtr;
typedef boost::shared_ptr< ::qbo_object_recognition::UpdateRequest const> UpdateRequestConstPtr;



template <class ContainerAllocator>
struct UpdateResponse_ {
  typedef UpdateResponse_<ContainerAllocator> Type;

  UpdateResponse_()
  : updated(false)
  {
  }

  UpdateResponse_(const ContainerAllocator& _alloc)
  : updated(false)
  {
  }

  typedef uint8_t _updated_type;
  uint8_t updated;


  typedef boost::shared_ptr< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct UpdateResponse
typedef  ::qbo_object_recognition::UpdateResponse_<std::allocator<void> > UpdateResponse;

typedef boost::shared_ptr< ::qbo_object_recognition::UpdateResponse> UpdateResponsePtr;
typedef boost::shared_ptr< ::qbo_object_recognition::UpdateResponse const> UpdateResponseConstPtr;


struct Update
{

typedef UpdateRequest Request;
typedef UpdateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Update
} // namespace qbo_object_recognition

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/UpdateRequest";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2df1c820c92c74a7826e781de98894e";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf2df1c820c92c74aULL;
  static const uint64_t static_value2 = 0x7826e781de98894eULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/UpdateResponse";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool updated\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_object_recognition::UpdateRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct UpdateRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_object_recognition::UpdateResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.updated);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct UpdateResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_object_recognition::Update> {
  static const char* value() 
  {
    return "f2df1c820c92c74a7826e781de98894e";
  }

  static const char* value(const qbo_object_recognition::Update&) { return value(); } 
};

template<>
struct DataType<qbo_object_recognition::Update> {
  static const char* value() 
  {
    return "qbo_object_recognition/Update";
  }

  static const char* value(const qbo_object_recognition::Update&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_object_recognition::UpdateRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2df1c820c92c74a7826e781de98894e";
  }

  static const char* value(const qbo_object_recognition::UpdateRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_object_recognition::UpdateRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/Update";
  }

  static const char* value(const qbo_object_recognition::UpdateRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_object_recognition::UpdateResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f2df1c820c92c74a7826e781de98894e";
  }

  static const char* value(const qbo_object_recognition::UpdateResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_object_recognition::UpdateResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/Update";
  }

  static const char* value(const qbo_object_recognition::UpdateResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_OBJECT_RECOGNITION_SERVICE_UPDATE_H

