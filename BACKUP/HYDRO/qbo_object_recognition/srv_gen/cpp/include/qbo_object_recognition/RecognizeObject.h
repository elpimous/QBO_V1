/* Auto-generated by genmsg_cpp for file /opt/ros/hydro/stacks/qbo_object_recognition/srv/RecognizeObject.srv */
#ifndef QBO_OBJECT_RECOGNITION_SERVICE_RECOGNIZEOBJECT_H
#define QBO_OBJECT_RECOGNITION_SERVICE_RECOGNIZEOBJECT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace qbo_object_recognition
{
template <class ContainerAllocator>
struct RecognizeObjectRequest_ {
  typedef RecognizeObjectRequest_<ContainerAllocator> Type;

  RecognizeObjectRequest_()
  {
  }

  RecognizeObjectRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct RecognizeObjectRequest
typedef  ::qbo_object_recognition::RecognizeObjectRequest_<std::allocator<void> > RecognizeObjectRequest;

typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectRequest> RecognizeObjectRequestPtr;
typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectRequest const> RecognizeObjectRequestConstPtr;



template <class ContainerAllocator>
struct RecognizeObjectResponse_ {
  typedef RecognizeObjectResponse_<ContainerAllocator> Type;

  RecognizeObjectResponse_()
  : object_name()
  , recognized(false)
  {
  }

  RecognizeObjectResponse_(const ContainerAllocator& _alloc)
  : object_name(_alloc)
  , recognized(false)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _object_name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  object_name;

  typedef uint8_t _recognized_type;
  uint8_t recognized;


  typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct RecognizeObjectResponse
typedef  ::qbo_object_recognition::RecognizeObjectResponse_<std::allocator<void> > RecognizeObjectResponse;

typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectResponse> RecognizeObjectResponsePtr;
typedef boost::shared_ptr< ::qbo_object_recognition::RecognizeObjectResponse const> RecognizeObjectResponseConstPtr;


struct RecognizeObject
{

typedef RecognizeObjectRequest Request;
typedef RecognizeObjectResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct RecognizeObject
} // namespace qbo_object_recognition

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/RecognizeObjectRequest";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "20fe0fa539e86f0dcf82db65a3df666b";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x20fe0fa539e86f0dULL;
  static const uint64_t static_value2 = 0xcf82db65a3df666bULL;
};

template<class ContainerAllocator>
struct DataType< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/RecognizeObjectResponse";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string object_name\n\
bool recognized\n\
\n\
\n\
";
  }

  static const char* value(const  ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RecognizeObjectRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.object_name);
    stream.next(m.recognized);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct RecognizeObjectResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<qbo_object_recognition::RecognizeObject> {
  static const char* value() 
  {
    return "20fe0fa539e86f0dcf82db65a3df666b";
  }

  static const char* value(const qbo_object_recognition::RecognizeObject&) { return value(); } 
};

template<>
struct DataType<qbo_object_recognition::RecognizeObject> {
  static const char* value() 
  {
    return "qbo_object_recognition/RecognizeObject";
  }

  static const char* value(const qbo_object_recognition::RecognizeObject&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "20fe0fa539e86f0dcf82db65a3df666b";
  }

  static const char* value(const qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/RecognizeObject";
  }

  static const char* value(const qbo_object_recognition::RecognizeObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "20fe0fa539e86f0dcf82db65a3df666b";
  }

  static const char* value(const qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "qbo_object_recognition/RecognizeObject";
  }

  static const char* value(const qbo_object_recognition::RecognizeObjectResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // QBO_OBJECT_RECOGNITION_SERVICE_RECOGNIZEOBJECT_H

